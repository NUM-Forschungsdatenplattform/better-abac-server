{"version":3,"sources":["scripts/app-6af24d92af.js"],"names":["module","angular","element","document","ready","$log","$window","keycloakAuth","Keycloak","init","onLoad","success","authenticated","factory","$q","auth","loggedIn","authz","logout","redirectUri","location","login","logoutUrl","authServerUrl","realm","href","error","refreshAccessToken","tokenSet","token","resolve","reject","updateToken","newToken","confirm","loadUserProfile","profile","$injector","bootstrap","invoke","Auth","username","reload","onAuthSuccess","onAuthRefreshSuccess","acmeNavbar","NavbarController","this","directive","restrict","templateUrl","scope","controller","controllerAs","bindToController","$inject","relationTypeItemEditDirective","deleteEnabled","Restangular","RelationTypeItemEditDirectiveCtrl","$scope","partyTypes","all","partyTypeEndpoint","getList","$object","addExternalId","relationType","externalIds","push","cleanExternalIds","i","length","splice","save","crudListViewItem","require","template","link","attrs","controllers","policyItemEditDirective","PolicyItemEditDirectiveCtrl","policy","isActive","crudEndpolicy","partyTypeItemEditDirective","PartyTypeItemEditDirectiveCtrl","party","crudEndpoint","partyRelationItemEditDirective","PartyRelationItemEditDirectiveCtrl","parties","partyEndpoint","relationTypes","relationTypeEndpoint","partyRelation","partyItemEditDirective","PartyItemEditDirectiveCtrl","MainCtrl","$location","_this","endpointPath","path","substr","selectedEndpoint","getPartyIds","partyId","one","get","then","sourceItem","partyTitleGenerators","fullName","item","join","createPartyRelationTitleGenerators","target","retStrTitle","titleForPartyId","forPartyId","p","type","source","crudListDirective","CrudListDirectiveCtrl","$element","newItem","clearNewItem","getNewItem","addNewItem","crudList","endpoint","removeItem","alert","pt","id","attr","crudListViewDirective","CrudListViewDirectiveCtrl","closeSelected","panels","activePanel","transclude","itemTitleGenerators","titleProps","split","colTitles","columnTitles","crudListViewItemDirective","CrudItemViewDirectiveCtrl","title","itemTitles","getTitleFromGenerator","titlePropKey","isObject","isFunction","titGenFn","titGenRes","isString","promisedTitle","resetTitle","titleStr","isArray","forEach","propName","index","trim","resTitle","resObj","newItemTitle","crudItemDirective","CrudItemDirectiveCtrl","$timeout","status","STATUS_SAVED","STATUS_SAVING","STATUS_ERROR","STATUS_IDLE","statusTmt","crudItem","isNew","res","setStatusTimeout","remove","cancel","el","runBlock","$http","$rootScope","getAuthorizationProp","Authorization","ace","config","set","$watch","setDefaultHeaders","setErrorInterceptor","response","deferred","responseHandler","merge","headers","run","routeConfig","$routeProvider","when","otherwise","redirectTo","constant","malarkey","moment","$logProvider","toastrConfig","RestangularProvider","$navbarProvider","debugEnabled","baseUrl","host","setBaseUrl","extend","defaults","activeClass","$templateCache","put"],"mappings":"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","file":"scripts/app-6af24d92af.js","sourcesContent":["(function () {\n  'use strict';\n\n  var module = angular\n    .module('betterAbacUi', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'restangular', 'ngRoute', 'mgcrea.ngStrap', 'toastr', 'ui.ace']);\n\n  angular.element(document).ready(function ($log, $window) {\n    var keycloakInterval = setInterval(function() {\n      if (typeof Keycloak !== 'undefined') {\n        clearInterval(keycloakInterval);\n    var keycloakAuth = new Keycloak('keycloak.json');\n    //auth.loggedIn = true;\n\n    keycloakAuth.init({onLoad: 'check-sso'}/*{ onLoad: 'login-required' }*/).success(function (authenticated) {\n\n      module.factory('Auth', function ($window, $q) {\n        var auth = {\n          loggedIn: authenticated,\n          authz: keycloakAuth,\n          logout: function () {\n            auth.authz.logout({\n              redirectUri: $window.location\n            });\n          },\n          login: function () {\n            $log('*** LOGIN');\n\n            auth.authz.login().success(function () {\n              auth.loggedIn = true;\n              auth.authz = keycloakAuth;\n              auth.logoutUrl = keycloakAuth.authServerUrl + \"/realms/\" + keycloakAuth.realm + \"/tokens/logout?redirect_uri=\" + $window.location.href;\n              module.factory('Auth', function () {\n                return auth;\n              });\n            }).error(function () {\n              $log('*** LOGIN-error');\n            });\n          },\n          refreshAccessToken: function () {\n            var tokenSet = auth.authz.token != null;\n            return $q(function (resolve, reject) {\n              auth.authz.updateToken()\n                .success(function (newToken) {\n                  resolve(auth.authz.token);\n                })\n                .error(function () {\n                  if (!tokenSet || confirm(\"Could not update token. You need to authenticate again.\")) {\n                    reject();\n                    auth.login();\n                  }\n                });\n            });\n          }\n        };\n        return auth;\n      });\n\n      if (authenticated) {\n        keycloakAuth.loadUserProfile().success(function (profile) {\n          var $injector = angular.bootstrap(document, ['betterAbacUi']);\n          $injector.invoke(function (Auth) {\n            Auth.username = profile.username;\n          });\n        });\n      } else {\n        //auth.login();\n        angular.bootstrap(document, ['betterAbacUi']);\n      }\n\n    }).error(function () {\n      $window.location.reload();\n    });\n\n    keycloakAuth.onAuthSuccess = function () {\n      /*alert('onAuthSuccess');*/\n    };\n    keycloakAuth.onAuthRefreshSuccess = function () {\n      /*$log('onAuthRefreshSuccess');*/\n    };\n      }\n    }, 50);\n\n  });\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar(Auth) {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {},\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController() {\n      this.username = Auth.username;\n      this.logout = Auth.logout;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('relationTypeItemEdit', relationTypeItemEditDirective);\n\n  /** @ngInject */\n  function relationTypeItemEditDirective(deleteEnabled, Restangular) {\n    var directive = {\n      restrict: 'A',\n      require:['relationTypeItemEdit','^^crudListView', 'crudItem', '^^crudListViewItem'],\n      template: '<form class=\"form\" role=\"form\">\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"name\">Name:</label>\\\n                        <input type=\"text\" class=\"form-control\" ng-model=\"crudListViewItem.item.name\" id=\"name\">\\\n                      </div>\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"allowedSourcePartyType\">Allowed Source Party Type:</label>\\\n                        <select class=\"form-control\" ng-options=\"partyType.name as partyType.name for partyType in relationTypeCtrl.partyTypes\" ng-model=\"crudListViewItem.item.allowedSourcePartyType\"></select>\\\n                      </div>\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"allowedTargetPartyType\">Allowed Target Party Type:</label>\\\n                        <select class=\"form-control\" ng-options=\"partyType.name as partyType.name for partyType in relationTypeCtrl.partyTypes\" ng-model=\"crudListViewItem.item.allowedTargetPartyType\"></select>\\\n                      </div>\\\n                      <div class=\"form-group\">\\\n                      <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"relationTypeCtrl.save(crudListViewItem.item)\">Save</button>\\\n                      <button ng-show=\"deleteEnabled\" type=\"button\" class=\"btn btn-default\" ng-click=\"crudListViewItem.delete(crudListViewItem.item)\"><span ng-show=\"crudListViewItem.item.id\">Delete</span><span ng-show=\"!crudListViewItem.item.id\">Clear</span></button>\\\n                      </div>\\\n                    </form>',\n      scope: {\n        partyTypeEndpoint:'@'\n      },\n      controller: RelationTypeItemEditDirectiveCtrl,\n      controllerAs: 'relationTypeCtrl',\n      bindToController: true,\n      link: function (scope, element, attrs, controllers) {\n        scope.deleteEnabled = deleteEnabled;\n        controllers[0].controllers = controllers;\n        scope.crudListViewItem = controllers[3];\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function RelationTypeItemEditDirectiveCtrl($scope) {\n\n      this.partyTypes = Restangular.all(this.partyTypeEndpoint).getList().$object;\n\n      this.addExternalId = function (relationType) {\n        if(!relationType.externalIds){\n          relationType.externalIds=[]\n        }\n        relationType.externalIds.push(\"\")\n      };\n\n      this.cleanExternalIds= function (relationType) {\n        if(relationType.externalIds){\n          for (var i = relationType.externalIds.length-1; i >=0; i--) {\n            if(relationType.externalIds[i]==null || relationType.externalIds[i].length<1) {\n              relationType.externalIds.splice(i,1);\n            }\n          }\n        }\n      };\n\n      this.save= function (relationType) {\n        this.cleanExternalIds(relationType);\n        $scope.crudListViewItem.save(relationType);\n      }\n\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('policyItemEdit', policyItemEditDirective);\n\n  /** @ngInject */\n  function policyItemEditDirective(deleteEnabled) {\n    var directive = {\n      restrict: 'A',\n      require:['policyItemEdit','^^crudListView', 'crudItem', '^^crudListViewItem'],\n      template: '<form class=\"form\" role=\"form\">\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"name\">Name:</label>\\\n                        <input type=\"text\" class=\"form-control\" ng-model=\"crudListViewItem.item.name\" id=\"name\">\\\n                      </div>\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"policy\">Policy:</label>\\\n                        <div class=\"form-control\" ng-model=\"crudListViewItem.item.policy\" id=\"policy\" ui-ace=\"{useWrapMode : true,showGutter: true,theme:\\'twilight\\',mode: \\'javascript\\'}\" style=\"height: 400px; width: 100%\"></div>\\\n                      </div>\\\n                      <div class=\"form-group\">\\\n                      <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"policyCtrl.save(crudListViewItem.item)\">Save</button>\\\n                      <button ng-show=\"deleteEnabled\" type=\"button\" class=\"btn btn-default\" ng-click=\"crudListViewItem.delete(crudListViewItem.item)\"><span ng-show=\"crudListViewItem.item.id\">Delete</span><span ng-show=\"!crudListViewItem.item.id\">Clear</span></button>\\\n                      </div>\\\n                    </form>',\n      scope: {\n        isActive:'=',\n        crudEndpolicy:'@'\n      },\n      controller: PolicyItemEditDirectiveCtrl,\n      controllerAs: 'policyCtrl',\n      bindToController: true,\n      link: function (scope, element, attrs, controllers) {\n        scope.deleteEnabled = deleteEnabled;\n        controllers[0].controllers = controllers;\n        scope.crudListViewItem = controllers[3];\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PolicyItemEditDirectiveCtrl($scope) {\n\n      this.addExternalId = function (policy) {\n        if(!policy.externalIds){\n          policy.externalIds=[]\n        }\n        policy.externalIds.push(\"\");\n      };\n\n      this.cleanExternalIds= function (policy) {\n        if(policy.externalIds){\n          for (var i = policy.externalIds.length-1; i >=0; i--) {\n            if(policy.externalIds[i]==null || policy.externalIds[i].length<1) {\n              policy.externalIds.splice(i,1);\n            }\n          }\n        }\n      };\n\n      this.save= function (policy) {\n        this.cleanExternalIds(policy);\n        $scope.crudListViewItem.save(policy);\n      }\n\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('partyTypeItemEdit', partyTypeItemEditDirective);\n\n  /** @ngInject */\n  function partyTypeItemEditDirective(deleteEnabled) {\n    var directive = {\n      restrict: 'A',\n      require: ['partyTypeItemEdit', '^^crudListView', 'crudItem', '^^crudListViewItem'],\n      template: '<form class=\"form\" role=\"form\">\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"name\">Name:</label>\\\n                        <input type=\"text\" class=\"form-control\" ng-model=\"crudListViewItem.item.name\" id=\"name\">\\\n                      </div>\\\n                      <div class=\"form-group\">\\\n                      <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"partyCtrl.save(crudListViewItem.item)\">Save</button>\\\n                      <button ng-show=\"deleteEnabled\" type=\"button\" class=\"btn btn-default\" ng-click=\"crudListViewItem.delete(crudListViewItem.item)\"><span ng-show=\"crudListViewItem.item.id\">Delete</span><span ng-show=\"!crudListViewItem.item.id\">Clear</span></button>\\\n                      </div>\\\n                    </form>',\n      scope: {\n        isActive: '=',\n        crudEndpoint: '@'\n      },\n      controller: PartyTypeItemEditDirectiveCtrl,\n      controllerAs: 'partyCtrl',\n      bindToController: true,\n      link: function (scope, element, attrs, controllers) {\n        scope.deleteEnabled = deleteEnabled;\n        controllers[0].controllers = controllers;\n        scope.crudListViewItem = controllers[3];\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PartyTypeItemEditDirectiveCtrl($scope) {\n\n      this.addExternalId = function (party) {\n        if (!party.externalIds) {\n          party.externalIds = []\n        }\n        party.externalIds.push(\"\")\n      };\n\n      this.cleanExternalIds = function (party) {\n        if (party.externalIds) {\n          for (var i = party.externalIds.length - 1; i >= 0; i--) {\n            if (party.externalIds[i] == null || party.externalIds[i].length < 1) {\n              party.externalIds.splice(i, 1);\n            }\n          }\n        }\n      };\n\n      this.save = function (party) {\n        this.cleanExternalIds(party);\n        $scope.crudListViewItem.save(party);\n      }\n\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('partyRelationItemEdit', partyRelationItemEditDirective);\n\n  /** @ngInject */\n  function partyRelationItemEditDirective(deleteEnabled, Restangular) {\n    var directive = {\n      restrict: 'A',\n      require: ['partyRelationItemEdit', '^^crudListView', 'crudItem', '^^crudListViewItem'],\n      template: '<form class=\"form\" role=\"form\">\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"source\">Source:</label>\\\n                        <select class=\"form-control\" ng-options=\"sourceParty.id as (sourceParty.type +\\' | ids: \\'+ sourceParty.externalIds.join(\\', \\')) for sourceParty in partyRelationCtrl.parties\" ng-model=\"crudListViewItem.item.source\"></select>\\\n                      </div>\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"relationType\">Relation Type:</label>\\\n                        <select class=\"form-control\" ng-options=\"relationType.name as relationType.name for relationType in partyRelationCtrl.relationTypes\" ng-model=\"crudListViewItem.item.relationType\"></select>\\\n                      </div>\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"target\">Target:</label>\\\n                        <select class=\"form-control\" ng-options=\"sourceParty.id as (sourceParty.type +\\' | ids: \\'+ sourceParty.externalIds.join(\\', \\')) for sourceParty in partyRelationCtrl.parties\" ng-model=\"crudListViewItem.item.target\"></select>\\\n                        <select class=\"form-control\" ng-options=\"sourceParty.id as (sourceParty.type +\\' | ids: \\'+ sourceParty.externalIds.join(\\', \\')) for sourceParty in partyRelationCtrl.parties\" ng-model=\"crudListViewItem.item.target\"></select>\\\n                      </div>\\\n                      <div class=\"form-group form-inline\">\\\n                        <label class=\"control-label\"><i class=\"fa fa-calendar\"></i> Valid Until:</label><br>\\\n                        <div class=\"form-group\">\\\n                          <input type=\"text\" size=\"10\" class=\"form-control\" ng-model=\"crudListViewItem.item.validUntil\" data-autoclose=\"1\" placeholder=\"Date\" bs-datepicker>\\\n                        </div>\\\n                        <div class=\"form-group\">\\\n                          <input type=\"text\" size=\"8\" class=\"form-control\" ng-model=\"crudListViewItem.item.validUntil\" data-time-format=\"h:mm:ss a\" data-autoclose=\"1\" placeholder=\"Time\" bs-timepicker>\\\n                        </div>\\\n                      </div>\\\n                      <div class=\"form-group\">\\\n                      <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"partyRelationCtrl.save(crudListViewItem.item)\">Save</button>\\\n                      <button ng-show=\"deleteEnabled\" type=\"button\" class=\"btn btn-default\" ng-click=\"crudListViewItem.delete(crudListViewItem.item)\"><span ng-show=\"crudListViewItem.item.id\">Delete</span><span ng-show=\"!crudListViewItem.item.id\">Clear</span></button>\\\n                      </div>\\\n                    </form>',\n      scope: {\n        isActive: '=',\n        relationTypeEndpoint: '@',\n        partyEndpoint: '@'\n      },\n      controller: PartyRelationItemEditDirectiveCtrl,\n      controllerAs: 'partyRelationCtrl',\n      bindToController: true,\n      link: function (scope, element, attrs, controllers) {\n        scope.deleteEnabled = deleteEnabled;\n        controllers[0].controllers = controllers;\n        scope.crudListViewItem = controllers[3];\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PartyRelationItemEditDirectiveCtrl($scope) {\n\n      this.parties = Restangular.all(this.partyEndpoint).getList().$object;\n      this.relationTypes = Restangular.all(this.relationTypeEndpoint).getList().$object;\n\n      this.addExternalId = function (partyRelation) {\n        if (!partyRelation.externalIds) {\n          partyRelation.externalIds = []\n        }\n        partyRelation.externalIds.push(\"\")\n      };\n\n      this.cleanExternalIds = function (partyRelation) {\n        if (partyRelation.externalIds) {\n          for (var i = partyRelation.externalIds.length - 1; i >= 0; i--) {\n            if (partyRelation.externalIds[i] == null || partyRelation.externalIds[i].length < 1) {\n              partyRelation.externalIds.splice(i, 1);\n            }\n          }\n        }\n      };\n\n      this.save = function (partyRelation) {\n        this.cleanExternalIds(partyRelation);\n        $scope.crudListViewItem.save(partyRelation);\n      }\n\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('partyItemEdit', partyItemEditDirective);\n\n  /** @ngInject */\n  function partyItemEditDirective(deleteEnabled, Restangular) {\n    var directive = {\n      restrict: 'A',\n      require: ['partyItemEdit', '^^crudListView', 'crudItem', '^^crudListViewItem'],\n      template: '<form class=\"form\" role=\"form\">\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"type\">Type:</label>\\\n                        <select class=\"form-control\" ng-options=\"partyType.name as partyType.name for partyType in partyCtrl.partyTypes\" ng-model=\"crudListViewItem.item.type\"></select>\\\n                      </div>\\\n                      <div class=\"form-group form-inline\">\\\n                        <label for=\"exId\">External Ids:</label>\\\n                        <input type=\"text\" class=\"form-control\" ng-repeat=\"exId in crudListViewItem.item.externalIds track by $index\" ng-model=\"crudListViewItem.item.externalIds[$index]\" ng-blur=\"partyCtrl.cleanExternalIds(crudListViewItem.item)\">\\\n                        <button type=\"button\" ng-click=\"partyCtrl.addExternalId(crudListViewItem.item)\" class=\"btn btn-success\">+</button> \\\n                      </div>\\\n                      <div class=\"form-group\">\\\n                      <button type=\"submit\" class=\"btn btn-primary\" ng-click=\"partyCtrl.save(crudListViewItem.item)\">Save</button>\\\n                      <button ng-show=\"deleteEnabled\" type=\"button\" class=\"btn btn-default\" ng-click=\"crudListViewItem.delete(crudListViewItem.item)\"><span ng-show=\"crudListViewItem.item.id\">Delete</span><span ng-show=\"!crudListViewItem.item.id\">Clear</span></button>\\\n                      </div>\\\n                    </form>',\n      scope: {\n        partyTypeEndpoint: '@'\n      },\n      controller: PartyItemEditDirectiveCtrl,\n      controllerAs: 'partyCtrl',\n      bindToController: true,\n      link: function (scope, element, attrs, controllers) {\n        scope.deleteEnabled = deleteEnabled;\n        controllers[0].controllers = controllers;\n        scope.crudListViewItem = controllers[3];\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function PartyItemEditDirectiveCtrl($scope) {\n\n      this.partyTypes = Restangular.all(this.partyTypeEndpoint).getList().$object;\n\n      this.addExternalId = function (party) {\n        if (!party.externalIds) {\n          party.externalIds = []\n        }\n        party.externalIds.push(\"\")\n      };\n\n      this.cleanExternalIds = function (party) {\n        if (party.externalIds) {\n          for (var i = party.externalIds.length - 1; i >= 0; i--) {\n            if (party.externalIds[i] == null || party.externalIds[i].length < 1) {\n              party.externalIds.splice(i, 1);\n            }\n          }\n        }\n      };\n\n      this.save = function (party) {\n        this.cleanExternalIds(party);\n        $scope.crudListViewItem.save(party);\n      }\n\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .controller('MainCtrl', MainCtrl);\n\n  /** @ngInject */\n  function MainCtrl($location, $q, Restangular) {\n    var _this = this;\n    var endpointPath = $location.path().substr(1);\n    _this.selectedEndpoint = endpointPath;\n\n    var getPartyIds = function (partyId) {\n      return $q(function (resolve, reject) {\n        Restangular.one('party', partyId).get().then(function (sourceItem) {\n          resolve(sourceItem);\n        });\n      });\n    };\n\n    _this.partyTitleGenerators = {\n      fullName: function (item) {\n        if (!item.fullName) {\n          return item.externalIds ? item.externalIds.join(', ') : 'no external ids'\n        }\n        return item.fullName;\n      }\n    };\n\n    _this.createPartyRelationTitleGenerators = {\n\n      target: function (item) {\n        var retStrTitle = '';\n        if (item && item.target) {\n          return $q(function (resolve) {\n            _this.createPartyRelationTitleGenerators.titleForPartyId(item.target, resolve);\n          });\n        }\n        return retStrTitle;\n      },\n\n      titleForPartyId: function (forPartyId, resolve) {\n        getPartyIds(forPartyId).then(function (p) {\n          var retStrTitle = p.type;\n          if (p.externalIds != null) {\n            if (p.fullName) {\n              retStrTitle += ' ' + p.fullName;\n            } else {\n              retStrTitle += ' ' + p.externalIds ? p.externalIds.join(', ') : '';\n            }\n          }\n          resolve(retStrTitle)\n        });\n      },\n\n      source: function (item) {\n        var retStrTitle = '';\n        if (item && item.source) {\n          return $q(function (resolve) {\n            _this.createPartyRelationTitleGenerators.titleForPartyId(item.source, resolve);\n          });\n        }\n        return retStrTitle;\n      }\n    }\n  }\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('crudList', crudListDirective);\n\n  /** @ngInject */\n  function crudListDirective(Restangular) {\n    var directive = {\n      restrict: 'A',\n      template: '',\n      controller: CrudListDirectiveCtrl,\n      controllerAs: 'crudListCtrl',\n      bindToController: true,\n      require: ['crudList'],//,'crudListView'],\n      link: function (scope, element, attr, controllers) {\n        controllers[0].controllers = controllers;\n        if (controllers[0].crudList == null) {\n          controllers[0].crudList = Restangular.all(controllers[0].crudEndpoint).getList().$object\n        }\n      },\n      scope: {\n        crudList: '=',\n        crudEndpoint: '@'\n      }\n\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CrudListDirectiveCtrl($scope, $element, deleteEnabled) {\n      this.newItem;\n\n      this.clearNewItem = function () {\n        this.newItem = this.getNewItem(this.crudEndpoint);\n      };\n\n      this.addNewItem = function (item) {\n        this.crudList.push(item);\n      };\n\n      this.getNewItem = function (endpoint) {\n        return Restangular.one(endpoint, null);\n      };\n\n      this.removeItem = function (item) {\n        if (!deleteEnabled) {\n          alert(\"Removing item is not allowed.\");\n          return\n        }\n        for (var i = 0; i < this.crudList.length; i++) {\n          var pt = this.crudList[i];\n          if (pt.id == item.id) {\n            this.crudList.splice(i, 1);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('crudListView', crudListViewDirective);\n\n  /** @ngInject */\n  function crudListViewDirective() {\n    var directive = {\n      restrict: 'E',\n      transclude:true,\n      template: '<div ng-model=\"panels.activePanel\" role=\"tablist\" aria-multiselectable=\"true\" bs-collapse>\\\n                  <div class=\"panel-group\">\\\n                    <div crud-list-view-item crud-item item=\"crudListViewCtrl.controllers[1].newItem\" is-active=\"panels.activePanel===0\">\\\n                      <div ng-transclude></div>\\\n                    </div>\\\n                  </div>\\\n                  <div class=\"panel\">\\\n                    <div class=\"panel-heading column-titles\">\\\n                      <div class=\"row\">\\\n                        <div class=\"col-xs-4\">{{crudListViewCtrl.colTitles[0]}}</div><div class=\"col-xs-4\">{{crudListViewCtrl.colTitles[1]}}</div><div class=\"col-xs-4\">{{crudListViewCtrl.colTitles[2]}}</div> \\\n                      </div>\\\n                    </div>\\\n                  </div>\\\n                  <div class=\"panel-group\" ng-repeat=\"crudItem in crudListViewCtrl.controllers[1].crudList\">\\\n                      <div crud-list-view-item crud-item item=\"crudItem\" is-active=\"panels.activePanel===$index+1\">\\\n                        <div ng-transclude></div>\\\n                      </div>\\\n                  </div>\\\n                 </div>',\n      scope: {\n        itemTitleGenerators:'='\n      },\n      require:['crudListView','^^crudList'],\n      controller: CrudListViewDirectiveCtrl,\n      controllerAs: 'crudListViewCtrl',\n      bindToController: true,\n      link: function (scope, element, attr, controllers) {\n        controllers[0].controllers = controllers;\n        controllers[1].clearNewItem();\n        controllers[0].titleProps = attr.titleProps ? attr.titleProps.split(';') : [];\n        ///controllers[0].itemTitleGenerators = controllers[0].itemTitleGenerators;\n        controllers[0].colTitles = attr.columnTitles ? attr.columnTitles.split(';') : [];\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CrudListViewDirectiveCtrl($scope) {\n      this.closeSelected= function () {\n        $scope.panels.activePanel=-1;\n      }\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('crudListViewItem', crudListViewItemDirective);\n\n  /** @ngInject */\n  function crudListViewItemDirective($q) {\n    var directive = {\n      restrict: 'A',\n      require: ['crudListViewItem', '^^crudListView', 'crudItem', \"^^crudList\"],\n      transclude: true,\n      template: '<div class=\"panel \"  ng-class=\"{\\'panel-info\\':!crudItemViewCtrl.isActive && !crudItemViewCtrl.controllers[2].status, \\'panel-primary\\':crudItemViewCtrl.isActive && (!crudItemViewCtrl.controllers[2].status || crudItemViewCtrl.controllers[2].status==crudItemViewCtrl.controllers[2].STATUS_SAVING), \\'panel-success\\':crudItemViewCtrl.controllers[2].status==crudItemViewCtrl.controllers[2].STATUS_SAVED, \\'panel-error\\':crudItemViewCtrl.controllers[2].status==crudItemViewCtrl.controllers[2].STATUS_ERROR}\">\\\n                    <div class=\"panel-heading cursor-pointer\" role=\"tab\" bs-collapse-toggle>\\\n                      <div class=\"row\" ng-show=\"crudItemViewCtrl.item.id\">\\\n                        <div class=\"col-xs-4\" ng-bind-html=\"crudItemViewCtrl.itemTitles[0]\"></div><div class=\"col-xs-4\" ng-bind-html=\"crudItemViewCtrl.itemTitles[1]\"></div><div class=\"col-xs-4\" ng-bind-html=\"crudItemViewCtrl.itemTitles[2]\"></div> \\\n                      </div>\\\n                      <h4 class=\"panel-title\">\\\n                          <button class=\"btn btn-default\" ng-show=\"crudItemViewCtrl.newItemTitle\">{{crudItemViewCtrl.newItemTitle}}</button> \\\n                          <a ng-show=\"!crudItemViewCtrl.newItemTitle\">\\\n                            <!--<span class=\"badge\">{{ crudItemViewCtrl.item.id }}</span>-->\\\n                            <span ng-show=\"crudItemViewCtrl.controllers[2].status==crudItemViewCtrl.controllers[2].STATUS_SAVED\" class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span> \\\n                            <!--<span ng-bind-html=\"crudItemViewCtrl.title\"></span>--> \\\n                            <!--<span class=\"glyphicon glyphicon-menu-right\"></span>--> \\\n                            {{crudItemViewCtrl.newItemTitle}} <!--{{crudItemViewCtrl.controllers[3].crudEndpoint}}--> \\\n                            <span ng-show=\"crudItemViewCtrl.controllers[2].status==crudItemViewCtrl.controllers[2].STATUS_ERROR\"> | item was not updated</span>\\\n                          </a>\\\n                      </h4>\\\n                    </div>\\\n                    <div class=\"panel-collapse\" role=\"tabpanel\" bs-collapse-target>\\\n                      <div class=\"panel-body\">\\\n                      <div ng-if=\"crudItemViewCtrl.isActive\"><div ng-transclude></div>\\\n                      </div>\\\n                          \\\n                      </div>\\\n                    </div>\\\n                </div>',\n      scope: {\n        item: '=',\n        isActive: '='\n      },\n      controller: CrudItemViewDirectiveCtrl,\n      controllerAs: 'crudItemViewCtrl',\n      bindToController: true,\n      link: function (scope, element, attrs, controllers) {\n\n        controllers[0].controllers = controllers;\n\n        if (!controllers[0].item || !controllers[0].item.id) {\n          controllers[0].newItemTitle = \" create new \";\n        }\n        controllers[0].resetTitle();\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CrudItemViewDirectiveCtrl() {\n\n      var _this = this;\n\n      this.title;\n      this.itemTitles = [];\n\n      var getTitleFromGenerator = function (titlePropKey) {\n        return $q(function (resolve) {\n          if (_this.controllers[1].itemTitleGenerators && angular.isObject(_this.controllers[1].itemTitleGenerators) && angular.isFunction(_this.controllers[1].itemTitleGenerators[titlePropKey])) {\n            var titGenFn = _this.controllers[1].itemTitleGenerators[titlePropKey];\n            //_this.controllers[1].itemTitleGenerators.forEach(function (titGenFn, ind) {\n            var titGenRes = titGenFn(_this.item);\n            if (angular.isString(titGenRes)) {\n              resolve(titGenRes);\n            } else if (titGenRes && angular.isFunction(titGenRes.then)) {\n              titGenRes.then(function (promisedTitle) {\n                resolve(promisedTitle);\n              })\n            }else{\n              resolve( null );\n            }\n            //});\n            /*var titleRes = _this.controllers[1].itemTitleGenerators(this.item);\n             if (angular.isString(titleRes)) {\n             titleStr = titleRes;\n             } else if (titleRes && angular.isFunction(titleRes.then)) {\n             titleRes.then(function (promisedTitle) {\n             _this.title = promisedTitle;\n             })\n             }*/\n          }else{\n            resolve( null );\n          }\n        })\n      };\n\n      this.resetTitle = function () {\n        if (this.item && this.item.id) {\n          var titleStr = '';\n          /*if (_this.controllers[1].itemTitleGenerators && angular.isArray(_this.controllers[1].itemTitleGenerators)) {\n            _this.controllers[1].itemTitleGenerators.forEach(function (titGenFn, ind) {\n              var titGenRes = titGenFn(this.item, ind);\n              if (angular.isString(titGenRes)) {\n                _this.itemTitles.push(titGenRes);\n              } else if (titleRes && angular.isFunction(titleRes.then)) {\n                titleRes.then(function (promisedTitle) {\n                  _this.itemTitles[ind] = promisedTitle;\n                })\n              }\n            });\n            /!*var titleRes = _this.controllers[1].itemTitleGenerators(this.item);\n            if (angular.isString(titleRes)) {\n              titleStr = titleRes;\n            } else if (titleRes && angular.isFunction(titleRes.then)) {\n              titleRes.then(function (promisedTitle) {\n                _this.title = promisedTitle;\n              })\n            }*!/\n          }*/\n\n          if (!titleStr && angular.isArray(_this.controllers[1].titleProps)) {\n            _this.controllers[1].titleProps.forEach(function (propName, index) {\n                /*if (propName.indexOf(';') >= 0) {\n                  propName.split(';').forEach(function (p) {\n                    var itmVal = _this.item[p.trim()];\n                    if (itmVal == null) {\n                      itmVal = '';\n                    }\n                    _this.itemTitles.push(itmVal);\n                    titleStr += itmVal + ' ';\n                  });\n                } else {*/\n\n                  var propName = propName.trim();\n                  getTitleFromGenerator(propName).then(function(resTitle){\n                    if(resTitle==null){\n                      resTitle = _this.item[propName];\n                    }\n                    if (resTitle == null) {\n                      resTitle = propName;\n                    }\n                    _this.itemTitles[index]=resTitle\n                  });\n\n                  ///titleStr += itmVal + ' ';\n                //}\n              }\n            );\n          }\n\n          ///_this.title = titleStr;\n        }\n\n      }\n      ;\n\n      this.delete = function (item) {\n        if (item.id) {\n          this.controllers[2].delete(item);\n          this.controllers[1].closeSelected();\n        } else {\n          this.controllers[3].clearNewItem();\n        }\n      };\n\n      this.save = function () {\n        _this.resetTitle();\n        this.controllers[2].save(this.item).then(function (resObj) {\n          if (resObj.id == _this.item.id) {\n            _this.item = resObj;\n          }\n          _this.controllers[3].clearNewItem();\n          _this.resetTitle();\n        }, function () {\n          //leave form on error\n        });\n      }\n\n    }\n  }\n\n})\n();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .directive('crudItem', crudItemDirective);\n\n  /** @ngInject */\n  function crudItemDirective() {\n    var directive = {\n      restrict: 'A',\n      template: '',\n      controller: CrudItemDirectiveCtrl,\n      controllerAs: 'crudItemCtrl',\n      bindToController: true,\n      require: ['crudItem', '^^crudList'],\n      link: function (scope, el, attr, controllers) {\n        controllers[0].controllers = controllers;\n      }\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function CrudItemDirectiveCtrl($scope, $element, $timeout, $q, deleteEnabled) {\n      var _this = this;\n      this.status = '';\n      this.STATUS_SAVED = 'saved';\n      this.STATUS_SAVING = 'saving';\n      this.STATUS_ERROR = 'error';\n      this.STATUS_IDLE = '';\n      this.statusTmt;\n\n\n      this.save = function (crudItem) {\n        this.status = this.STATUS_SAVING;\n        var isNew = !crudItem.id;\n        return $q(function (resolve, reject) {\n          crudItem.save().then(\n            function (res) {\n              if (isNew) {\n                _this.controllers[1].addNewItem(res);\n              }\n              setStatusTimeout(_this.STATUS_SAVED);\n              resolve(res, _this.STATUS_SAVED);\n            },\n            function () {\n              setStatusTimeout(_this.STATUS_ERROR);\n              reject(_this.STATUS_ERROR)\n            });\n        });\n      };\n\n      this.delete = function (crudItem) {\n        if (crudItem.id) {\n          if (!deleteEnabled) {\n            alert(\"Deleting is not allowed.\");\n            return\n          }\n          crudItem.remove().then(function () {\n            _this.controllers[1].removeItem(crudItem);\n          }, function () {\n            setStatusTimeout(_this.STATUS_ERROR)\n          });\n        } else {\n          this.controllers[1].clearNewItem();\n        }\n      };\n\n      var setStatusTimeout = function (status) {\n        _this.status = status;\n        $timeout.cancel(_this.statusTmt);\n        _this.statusTmt = $timeout(function () {\n          _this.status = '';\n        }, 2000);\n      }\n\n    }\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, Restangular, Auth, $http, $rootScope) {\n\n    if (ace) {\n      ace.config.set('basePath', 'aceFiles');\n    }\n\n    function getAuthorizationProp(token) {\n      return {Authorization: 'Bearer ' + token};\n    }\n\n    $rootScope.$watch(function () {\n      return Auth.authz.token;\n    }, function (newToken) {\n      if (newToken) {\n        Restangular.setDefaultHeaders(getAuthorizationProp(newToken));\n      }\n    });\n\n    Restangular.setErrorInterceptor(function (response, deferred, responseHandler) {\n\n      if (response.status === 401 || response.status === -1) {\n        Auth.refreshAccessToken().then(function (newToken) {\n          angular.merge(response.config.headers, getAuthorizationProp(newToken));\n          $http(response.config).then(responseHandler, deferred.reject);\n        });\n        return false; // error handled\n      }\n\n      return true; // error not handled\n    });\n  }\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .config(routeConfig);\n\n  function routeConfig($routeProvider) {\n    $routeProvider\n      .when('/party', {\n        templateUrl: 'app/main/main-list.html',\n        controller: 'MainCtrl',\n        controllerAs: 'mainCtrl'\n      })\n      .when('/partyType', {\n        templateUrl: 'app/main/main-list.html',\n        controller: 'MainCtrl',\n        controllerAs: 'mainCtrl'\n      })\n      .when('/partyRelation', {\n        templateUrl: 'app/main/main-list.html',\n        controller: 'MainCtrl',\n        controllerAs: 'mainCtrl'\n      })\n      .when('/relationType', {\n        templateUrl: 'app/main/main-list.html',\n        controller: 'MainCtrl',\n        controllerAs: 'mainCtrl'\n      })\n      .when('/policy', {\n        templateUrl: 'app/main/main-list.html',\n        controller: 'MainCtrl',\n        controllerAs: 'mainCtrl'\n      })\n      .otherwise({\n        redirectTo: '/party'\n      });\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('deleteEnabled', true);\n\n})();\n\n(function () {\n  'use strict';\n\n  angular\n    .module('betterAbacUi')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, RestangularProvider, $navbarProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n    var baseUrl = 'rest/v1/admin';\n    if (location.host == \"localhost:3000\") {\n      baseUrl = 'http://localhost:8080' + baseUrl;\n    }\n    RestangularProvider.setBaseUrl(baseUrl);\n    angular.extend($navbarProvider.defaults, {\n      activeClass: 'in'\n    });\n  }\n\n})();\n\nangular.module(\"betterAbacUi\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main-list.html\",\"<div class=\\\"container\\\"><div><acme-navbar></acme-navbar></div><div ng-if=\\\"mainCtrl.selectedEndpoint==\\'party\\'\\\" crud-list=\\\"mainCtrl.partyList\\\" crud-endpoint=\\\"{{mainCtrl.selectedEndpoint}}\\\"><h2>Party</h2><crud-list-view title-props=\\\"id;fullName;type\\\" item-title-generators=\\\"mainCtrl.partyTitleGenerators\\\" column-titles=\\\"Id;Name;Type\\\"><div party-item-edit=\\\"\\\" crud-item=\\\"\\\" party-type-endpoint=\\\"partyType\\\"></div></crud-list-view></div><div ng-if=\\\"mainCtrl.selectedEndpoint==\\'partyType\\'\\\" crud-list=\\\"mainCtrl.partyTypeList\\\" crud-endpoint=\\\"{{mainCtrl.selectedEndpoint}}\\\"><h2>Party Type</h2><crud-list-view title-props=\\\"id; name\\\" column-titles=\\\"Id;Name\\\"><div party-type-item-edit=\\\"\\\" crud-item=\\\"\\\"></div></crud-list-view></div><div ng-if=\\\"mainCtrl.selectedEndpoint==\\'policy\\'\\\" crud-list=\\\"mainCtrl.partyTypeList\\\" crud-endpoint=\\\"{{mainCtrl.selectedEndpoint}}\\\"><h2>Policy</h2><crud-list-view title-props=\\\"name\\\"><div policy-item-edit=\\\"\\\" crud-item=\\\"\\\"></div></crud-list-view></div><div ng-if=\\\"mainCtrl.selectedEndpoint==\\'relationType\\'\\\" crud-list=\\\"mainCtrl.partyTypeList\\\" crud-endpoint=\\\"{{mainCtrl.selectedEndpoint}}\\\"><h2>Relation Type</h2><crud-list-view title-props=\\\"id; name\\\" column-titles=\\\"Id;Name\\\"><div relation-type-item-edit=\\\"\\\" crud-item=\\\"\\\" party-type-endpoint=\\\"partyType\\\"></div></crud-list-view></div><div ng-if=\\\"mainCtrl.selectedEndpoint==\\'partyRelation\\'\\\" crud-list=\\\"mainCtrl.partyTypeList\\\" crud-endpoint=\\\"{{mainCtrl.selectedEndpoint}}\\\"><h2>Party Relation</h2><crud-list-view title-props=\\\"source;relationType; target\\\" item-title-generators=\\\"mainCtrl.createPartyRelationTitleGenerators\\\" column-titles=\\\"Source;Relation Type; Target\\\"><div party-relation-item-edit=\\\"\\\" crud-item=\\\"\\\" party-endpoint=\\\"party\\\" relation-type-endpoint=\\\"relationType\\\"></div></crud-list-view></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-default\\\" role=\\\"navigation\\\" bs-navbar=\\\"\\\"><div class=\\\"navbar-header\\\"><a class=\\\"navbar-brand\\\" href=\\\"#\\\">Better ABAC</a></div><ul class=\\\"nav navbar-nav navbar-left\\\"><li data-match-route=\\\"/party\\\"><a href=\\\"#/party\\\">Party</a></li><li data-match-route=\\\"/partyRelation\\\"><a href=\\\"#/partyRelation\\\">Party Relation</a></li><li data-match-route=\\\"/policy\\\"><a href=\\\"#/policy\\\">Policy</a></li><li data-match-route=\\\"/partyType\\\"><a href=\\\"#/partyType\\\">Party Type</a></li><li data-match-route=\\\"/relationType\\\"><a href=\\\"#/relationType\\\">Relation Type</a></li></ul><ul class=\\\"nav navbar-nav navbar-right\\\"><li class=\\\"navbar-username\\\"><a ng-click=\\\"vm.logout()\\\" class=\\\"navbar-link\\\"><span class=\\\"glyphicon glyphicon glyphicon-off alert\\\"></span>{{vm.username}}</a></li></ul></nav>\");}]);"],"sourceRoot":"/source/"}